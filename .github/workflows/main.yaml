name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.6-alpine, 3.7-alpine, 3.8-alpine]
        opencv-python: [4.2, 4.3, 4.4]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: docker_builder
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Login to AliYun Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push opencv-python
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.docker_builder.outputs.name }}
          file: "{{ matrix.python}}/Dockerfile"
          build-args: "OPENCV=opencv-python~={{ matrix.opencv }}"
          tags: fishead/opencv-python:{{ matrix.python }}-{{ matrix.opencv-python }}
          pull: true
          push: true

      - name: Build and push opencv-python-headless
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.docker_builder.outputs.name }}
          file: "{{ matrix.python}}/Dockerfile"
          build-args: "OPENCV=opencv-python-headless~={{ matrix.opencv }}"
          tags: fishead/opencv-python:{{ matrix.python }}-{{ matrix.opencv-python }}-headless
          pull: true
          push: true
